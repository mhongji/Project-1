---
title: "Project 1"
author: 
  - Hongjing Mao
  - Yuhan Hu
date: "2025-06-14"
format: pdf
editor: visual
---

## Step 1: Data preprocessing

```{r}
library(tidyverse)

url <- "https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv"

edu01a <- read_csv(url, show_col_types = FALSE) %>% 
  select(
    area_name = Area_name,   # rename
    STCOU,
    ends_with("D")           # keep every column ending in “D”
  )

head(edu01a, 5)              # display first 5 rows
```

## Step 2: wide string to long string

```{r}
library(tidyr)

edu01a_long <- edu01a %>% 
  pivot_longer(
    cols  = -c(area_name, STCOU),   # every “D” column
    names_to  = "raw_var",          # original census column name
    values_to = "enrollment",       # numeric value
    values_drop_na = TRUE           # drop empty cells, if any
  )

head(edu01a_long, 5)                # verify first 5 rows
```

## Step 3: Parse variable name string

```{r}
long_updated <- edu01a_long %>% 
  mutate(
    # last two digits before the "D"
    yr_two      = substr(raw_var, nchar(raw_var) - 2, nchar(raw_var) - 1),  # e.g. "97" or "02"
    year        = as.integer(
                   if_else(as.integer(yr_two) <= 30,  # 00-30 → 2000-2030
                           paste0("20", yr_two),
                           paste0("19", yr_two))      # 31-99 → 1931-1999
                 ),
    measurement = substr(raw_var, 1, 7)               # first 3 chars + next 4 digits
  ) %>% 
  select(-yr_two)                                     # helper no longer needed

head(long_updated, 5)
```

## Step 4: Separate county vs non-county data & add classes

```{r}
library(dplyr)
library(stringr)

# rows whose Area_name ends “, XX” → county measurements
county_idx <- grep(", \\w\\w$", long_updated$area_name)

county_tibble <- long_updated[county_idx, ] %>% 
  mutate(area_name = str_trim(area_name))          # tidy up trailing spaces
class(county_tibble) <- c("county", class(county_tibble))

state_tibble  <- long_updated[-county_idx, ]
class(state_tibble)  <- c("state",  class(state_tibble))

# quick check: first 10 rows of each
head(county_tibble, 10)
head(state_tibble,  10)
```

## Step 5: Create new variable

```{r}
library(stringr)

county_tibble <- county_tibble %>% 
  mutate(
    state = str_sub(area_name, -2, -1)   # grab the “DD” after the comma
  )
```

## Step 6: Add “division” to non-county (state) rows

```{r}
# ❶ build a lookup vector  ——  U.S. Census Bureau’s nine divisions
division_tbl <- tribble(
  ~state, ~division,
  "CT","New England",   "ME","New England",   "MA","New England",
  "NH","New England",   "RI","New England",   "VT","New England",
  "NJ","Middle Atlantic","NY","Middle Atlantic","PA","Middle Atlantic",
  "IL","East North Central","IN","East North Central","MI","East North Central",
  "OH","East North Central","WI","East North Central",
  "IA","West North Central","KS","West North Central","MN","West North Central",
  "MO","West North Central","NE","West North Central","ND","West North Central","SD","West North Central",
  "DE","South Atlantic","FL","South Atlantic","GA","South Atlantic","MD","South Atlantic",
  "NC","South Atlantic","SC","South Atlantic","VA","South Atlantic","DC","South Atlantic","WV","South Atlantic",
  "AL","East South Central","KY","East South Central","MS","East South Central","TN","East South Central",
  "AR","West South Central","LA","West South Central","OK","West South Central","TX","West South Central",
  "AZ","Mountain","CO","Mountain","ID","Mountain","MT","Mountain",
  "NV","Mountain","NM","Mountain","UT","Mountain","WY","Mountain",
  "AK","Pacific","CA","Pacific","HI","Pacific","OR","Pacific","WA","Pacific"
)

state_tibble <- state_tibble %>% 
  mutate(
    state  = str_sub(area_name, -2, -1),        # “NC”, “SC”, etc.
    division = case_when(
      state %in% division_tbl$state ~
        division_tbl$division[match(state, division_tbl$state)],
      TRUE ~ "ERROR"                            # UNITED STATES, Puerto Rico, etc.
    )
  )

# quickly inspect
head(county_tibble, 10)
head(state_tibble,  10)
```

